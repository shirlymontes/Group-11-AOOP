package com.motorph.gui;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.time.Month;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shirl
 */
public class FinanceFrame extends javax.swing.JFrame {

   
    public FinanceFrame() {
        initComponents();
        loadEmployeeData();
    }
    
    private void loadEmployeeData() {
    String url = "jdbc:mysql://localhost:3306/payroll_db";
    String user = "root";
    String password = "mmdcaoop";

    String sql = "SELECT employee_id, CONCAT(first_name, ' ', last_name) AS employee_name, basic_salary FROM employee";

    try (
        Connection conn = DriverManager.getConnection(url, user, password);
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
    ) {
        DefaultTableModel model = (DefaultTableModel) PayrollTable.getModel();
        model.setRowCount(0); // clear table

        while (rs.next()) {
            int id = rs.getInt("employee_id");
            String name = rs.getString("employee_name");
            double basicSalary = rs.getDouble("basic_salary");

            model.addRow(new Object[] { id, name, basicSalary, "", "", "", "", "", "", "", "Pending" });
        }

    } catch (Exception ex) {
   ex.printStackTrace();
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PayrollTable = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        btnGenerate = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        banner1 = new com.motorph.gui.Banner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(233, 233, 233));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 700));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));

        PayrollTable.setBackground(new java.awt.Color(255, 255, 255));
        PayrollTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Employee Name", "Basic Salary", "Gross Salary", "SSS", "Pag-IBIG", "PhilHealth", "Tax", "Total Deduction", "Net Pay", "Status"
            }
        ));
        PayrollTable.setGridColor(new java.awt.Color(255, 255, 255));
        PayrollTable.setSelectionBackground(new java.awt.Color(0, 102, 153));
        jScrollPane1.setViewportView(PayrollTable);

        jLabel28.setBackground(new java.awt.Color(153, 153, 153));
        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel28.setText("PAYROLL ");

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerate)
                        .addGap(35, 35, 35))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(btnGenerate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setForeground(new java.awt.Color(153, 153, 153));

        jLabel27.setBackground(new java.awt.Color(153, 153, 153));
        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel27.setText("DASHBOARD");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel27)
                .addContainerGap(1190, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel27)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(604, 604, 604))))
            .addComponent(banner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(banner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
            DefaultTableModel model = (DefaultTableModel) PayrollTable.getModel();
          
      for (int i = 0; i < model.getRowCount(); i++) {
        
        double monthlyBasicSalary = Double.parseDouble(model.getValueAt(i, 2).toString());
        
       
        double basicSalary = monthlyBasicSalary / 2;

        double gross = basicSalary;

        double sss = calculateSssContribution(basicSalary);
        double pagibig = calculatePagibigContribution(basicSalary);
        double philhealth = calculatePhilhealthContribution(basicSalary);
        
        
        double annualTax = calculateAnnualTax(monthlyBasicSalary * 12);
        double tax = annualTax / 12 / 2;  

        double totalDeductions = sss + pagibig + philhealth + tax;
        double netPay = gross - totalDeductions;

        
        model.setValueAt(basicSalary, i, 3); 
        model.setValueAt(sss, i, 4);
        model.setValueAt(pagibig, i, 5);
        model.setValueAt(philhealth, i, 6);
        model.setValueAt(tax, i, 7);
        model.setValueAt(totalDeductions, i, 8);
        model.setValueAt(netPay, i, 9);
        model.setValueAt("Generated", i, 10);
    }

    JOptionPane.showMessageDialog(null, "Semi-monthly payroll generated!");

    }//GEN-LAST:event_btnGenerateActionPerformed

    // calculate SSS contribution based on basic salary
    private double calculateSssContribution(double basicSalary) {
        if (basicSalary >= 12750 && basicSalary < 13250) {
            return 585.00;
        } else if (basicSalary >= 13250 && basicSalary < 13750) {
            return 607.50;
        } else if (basicSalary >= 13750 && basicSalary < 14250) {
            return 630.00;
        } else if (basicSalary >= 14250 && basicSalary < 14750) {
            return 652.50;
        } else if (basicSalary >= 14750 && basicSalary < 15250) {
            return 675.00;
        } else if (basicSalary >= 15250 && basicSalary < 15750) {
            return 697.50;
        } else if (basicSalary >= 15750 && basicSalary < 16250) {
            return 720.00;
        } else if (basicSalary >= 16250 && basicSalary < 16750) {
            return 742.50;
        } else if (basicSalary >= 16750 && basicSalary < 17250) {
            return 765.00;
        } else if (basicSalary >= 17250 && basicSalary < 17750) {
            return 787.50;
        } else if (basicSalary >= 17750 && basicSalary < 18250) {
            return 810.00;
        } else if (basicSalary >= 18250 && basicSalary < 18750) {
            return 832.50;
        } else if (basicSalary >= 18750 && basicSalary < 19250) {
            return 855.00;
        } else if (basicSalary >= 19250 && basicSalary < 19750) {
            return 877.50;
        } else if (basicSalary >= 19750 && basicSalary < 20250) {
            return 900.00;
        } else if (basicSalary >= 20250 && basicSalary < 20750) {
            return 922.50;
        } else if (basicSalary >= 20750 && basicSalary < 21250) {
            return 945.00;
        } else if (basicSalary >= 21250 && basicSalary < 21750) {
            return 967.50;
        } else if (basicSalary >= 21750 && basicSalary < 22250) {
            return 990.00;
        } else if (basicSalary >= 22250 && basicSalary < 22750) {
            return 1012.50;
        } else if (basicSalary >= 22750 && basicSalary < 23250) {
            return 1035.00;
        } else if (basicSalary >= 23250 && basicSalary < 23750) {
            return 1057.50;
        } else if (basicSalary >= 23750 && basicSalary < 24250) {
            return 1080.00;
        } else {
            return 1125.00; // Default contribution for over salary
        }
    }

    // calculate Pag-IBIG contribution based on basic salary
    private double calculatePagibigContribution(double monthlyBasicSalary) {

        if (monthlyBasicSalary > 1500) {
            // Employee's Contribution Rate 2%
            double employeeContribution = 0.02 * monthlyBasicSalary;
            // Employer's Contribution Rate 2%
            double employerContribution = 0.02 * monthlyBasicSalary;
            // Total Contribution 4%
            double totalContribution = employeeContribution + employerContribution;
            // Limit the total contribution to 100
            return Math.min(totalContribution, 100.0);
        } else {
            return 0.0;
        }
    }

    private double calculatePhilhealthContribution(double monthlyBasicSalary) {
        if (monthlyBasicSalary <= 10000) {
            return 300.0; // Monthly Premium 300
        } else if (monthlyBasicSalary > 10000 && monthlyBasicSalary <= 59999.99) {
            // Premium Rate 3% - Monthly Premium - 300 up to 1,800
            return 0.03 * monthlyBasicSalary - 300;
        } else if (monthlyBasicSalary >= 60000) {
            // Premium Rate 3% - Monthly Premium 1,800
            return 1800.0;
        } else {
           
            return 0.0;
        }
    }

    // calculate withholding tax based on total earnings
    private double calculateAnnualTax(double annualTax) {
        if (annualTax <= 250000) {
            return 0.0; // No withholding tax

        } else if (annualTax > 250000 && annualTax <= 400000) {

            return 0.15 * (annualTax - 250000);

        } else if (annualTax > 400000 && annualTax <= 800000) {

            return 22500 + 0.20 * (annualTax - 400000);

        } else if (annualTax > 800000 && annualTax <= 2000000) {

            return 102500 + 0.25 * (annualTax - 800000);

        } else if (annualTax > 2000000 && annualTax <= 8000000) {

            return 402500 + 0.30 * (annualTax - 2000000);
        } else if (annualTax <= 8000000) {

            return 2202500 + .35 * (annualTax - 8000000);
        }
        return 0;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinanceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinanceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinanceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinanceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinanceFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PayrollTable;
    private com.motorph.gui.Banner banner1;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
